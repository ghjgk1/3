name: SonarQube Analysis

on:
  push:
    branches: [ master ]
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install tools
        run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet tool install --global dotnet-coverage

      - name: Restore dependencies
        run: dotnet restore

      - name: Begin SonarQube analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner begin `
            /k:"ghjgk1_3" `
            /o:"ghjgk1" `
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" `
            /d:sonar.host.url="https://sonarcloud.io" `
            /d:sonar.cs.vscoveragexml.reportsPaths="coverage.xml" `
            /d:sonar.coverage.exclusions="**Test*.cs,**/Migrations/**"

      - name: Build solution
        run: dotnet build --configuration Release --no-incremental --no-restore

      - name: Run tests with coverage
        run: |
          dotnet-coverage collect "dotnet test --configuration Release --no-build --filter 'TestCategory!=Integration'" -f xml -o "coverage.xml"

      - name: Verify coverage file
        shell: powershell
        run: |
          if (Test-Path "coverage.xml") {
            Write-Host "Coverage file found: coverage.xml"
          } else {
            Write-Host "##[error] No coverage file found!"
            exit 1
          }

      - name: End SonarQube analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
