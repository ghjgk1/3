name: SonarCloud Analysis
on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths-ignore:
      - "vscode/**"
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - "!vscode/**"

permissions:
  contents: read
  pull-requests: read

env:
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

jobs:
  checksecret:
    name: Check if SONAR_TOKEN is set in GitHub Secrets
    runs-on: ubuntu-latest
    outputs:
      is_SONAR_TOKEN_set: ${{ steps.checksecret_job.outputs.is_SONAR_TOKEN_set }}
    steps:
      - name: Check whether SONAR_TOKEN is set
        id: checksecret_job
        run: |
          echo "is_SONAR_TOKEN_set=${{ env.SONAR_TOKEN != '' }}" >> $GITHUB_OUTPUT

  sonar_analysis:
    needs: [checksecret]
    if: needs.checksecret.outputs.is_SONAR_TOKEN_set == 'true'
    name: Build and Analyze with SonarCloud
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "adopt"
          java-version: 17

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.x"

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Install SonarCloud scanner
        run: dotnet tool install dotnet-sonarscanner --create-manifest-if-needed

      - name: Begin SonarCloud analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: pwsh
        run: |
          dotnet tool run dotnet-sonarscanner begin `
            /k:"ghjgk1_3" `
            /o:"ghjgk1" `
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" `
            /d:sonar.host.url="https://sonarcloud.io"  `
            /d:sonar.cs.opencover.reportsPaths="test/**/coverage.opencover.xml" `
            /d:sonar.coverage.exclusions="**/bin/**,**/obj/**"

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --configuration Release --no-restore

      - name: Run tests with coverage
        shell: pwsh
        run: |
          dotnet test test/AscDb-to-AD_SynchronizerTests/AscDb-to-AD_SynchronizerTests.csproj `
            --no-build `
            --verbosity normal `
            /p:CollectCoverage=true `
            /p:CoverletOutputFormat=opencover `
            /p:CoverletOutput="../coverage.opencover.xml" `
            /p:Exclude="[xunit.*]*%2c[*Tests]*"

      - name: End SonarCloud analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: pwsh
        run: |
          dotnet tool run dotnet-sonarscanner end `
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
